version: '3.8'

services:
  # Servicio de la aplicaci贸n (por defecto en modo desarrollo)
  app:
    build:
      context: .
      target: development  # Cambia a 'production' para entornos de producci贸n
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      # Excluye el directorio virtual env para evitar conflictos
      - /app/.venv/
    environment:
      # Variables de entorno para la aplicaci贸n
      - DATABASE_URL=mysql+pymysql://root:${MYSQL_ROOT_PASSWORD:-Passw0rd!}@db:3306/trans_comarapa
      - SECRET_KEY=${SECRET_KEY:-your-secret-key}
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - DEBUG=true
    depends_on:
      db:
        condition: service_healthy
    networks:
      - trans-comarapa-network

  # Servicio de la base de datos MySQL
  db:
    image: mysql:8.0
    restart: unless-stopped
    ports:
      # Mapeo al puerto 3308 para evitar conflictos con MySQL local (si existe)
      - "3308:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-Passw0rd!}
      - MYSQL_DATABASE=trans_comarapa
      - MYSQL_CHARACTER_SET_SERVER=utf8mb4
      - MYSQL_COLLATION_SERVER=utf8mb4_unicode_ci
    volumes:
      # Volumen para persistencia de datos
      - mysql_data:/var/lib/mysql
      # Volumen para scripts de inicializaci贸n
      - ./scripts/db:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD:-Passw0rd!}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - trans-comarapa-network
    command: --default-authentication-plugin=mysql_native_password

networks:
  trans-comarapa-network:
    driver: bridge

volumes:
  mysql_data:
    driver: local 