// Middleware para p√°ginas que requieren autenticaci√≥n con validaci√≥n de token
export default defineNuxtRouteMiddleware(async (to, from) => {
  if (process.client) {
    const authStore = useAuthStore()
    
    // Asegurarse de que el estado de autenticaci√≥n est√© inicializado
    authStore.init()
    
    // Verificaci√≥n b√°sica: si no hay token, redirigir inmediatamente
    if (!authStore.isAuthenticated) {
      return navigateTo('/login')
    }
    
    // Verificaci√≥n avanzada: validar token en el servidor
    try {
      // Importar authService din√°micamente para evitar problemas de SSR
      const { default: authService } = await import('~/services/authService')
      
      // Intentar verificar el token en el servidor
      await authService.verifyToken()
      
      // Si llegamos aqu√≠, el token es v√°lido
      console.log('‚úÖ Token v√°lido - acceso permitido')
      
    } catch (error) {
      console.warn('üîí Token inv√°lido o expirado, cerrando sesi√≥n autom√°ticamente')
      
      // Token inv√°lido o expirado - hacer logout autom√°tico
      await authStore.logout()
      
      // Redirigir al login
      return navigateTo('/login')
    }
  }
}) 